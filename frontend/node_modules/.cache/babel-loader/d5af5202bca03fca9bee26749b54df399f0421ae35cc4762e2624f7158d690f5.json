{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soura\\\\Projects\\\\LearnHub\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport supabase from '../lib/supabase';\nimport { UserRole } from '../types';\nimport { getUserProfile } from '../lib/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  session: null,\n  user: null,\n  profile: null,\n  isLoading: true,\n  isAuthenticated: false,\n  isStudent: false,\n  isInstructor: false,\n  isAdmin: false,\n  refreshProfile: async () => {}\n});\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [session, setSession] = useState(null);\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const refreshProfile = async () => {\n    if (user) {\n      const profileData = await getUserProfile();\n      if (profileData) {\n        setProfile(profileData);\n      }\n    }\n  };\n  useEffect(() => {\n    // Initial session check\n    const checkSession = async () => {\n      setIsLoading(true);\n      try {\n        const {\n          data: {\n            session: currentSession\n          }\n        } = await supabase.auth.getSession();\n        setSession(currentSession);\n        if (currentSession !== null && currentSession !== void 0 && currentSession.user) {\n          setUser(currentSession.user);\n          const profileData = await getUserProfile();\n          if (profileData) {\n            setProfile(profileData);\n          }\n        }\n      } catch (error) {\n        console.error('Error checking auth session:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkSession();\n\n    // Subscribe to auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange(async (event, newSession) => {\n      var _newSession$user;\n      setSession(newSession);\n      setUser((_newSession$user = newSession === null || newSession === void 0 ? void 0 : newSession.user) !== null && _newSession$user !== void 0 ? _newSession$user : null);\n      if (newSession !== null && newSession !== void 0 && newSession.user) {\n        const profileData = await getUserProfile();\n        if (profileData) {\n          setProfile(profileData);\n        }\n      } else {\n        setProfile(null);\n      }\n      setIsLoading(false);\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n  const isAuthenticated = !!user && !!session;\n  const isStudent = (profile === null || profile === void 0 ? void 0 : profile.role) === UserRole.STUDENT;\n  const isInstructor = (profile === null || profile === void 0 ? void 0 : profile.role) === UserRole.INSTRUCTOR;\n  const isAdmin = (profile === null || profile === void 0 ? void 0 : profile.role) === UserRole.ADMIN;\n  const value = {\n    session,\n    user,\n    profile,\n    isLoading,\n    isAuthenticated,\n    isStudent,\n    isInstructor,\n    isAdmin,\n    refreshProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"g6B79wTZ/CDLi0cWV2G7ERWAlD8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","supabase","UserRole","getUserProfile","jsxDEV","_jsxDEV","AuthContext","session","user","profile","isLoading","isAuthenticated","isStudent","isInstructor","isAdmin","refreshProfile","useAuth","_s","AuthProvider","children","_s2","setSession","setUser","setProfile","setIsLoading","profileData","checkSession","data","currentSession","auth","getSession","error","console","subscription","onAuthStateChange","event","newSession","_newSession$user","unsubscribe","role","STUDENT","INSTRUCTOR","ADMIN","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/soura/Projects/LearnHub/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Session, User } from '@supabase/supabase-js';\r\nimport supabase from '../lib/supabase';\r\nimport { UserProfile, UserRole } from '../types';\r\nimport { getUserProfile } from '../lib/auth';\r\n\r\ninterface AuthContextType {\r\n  session: Session | null;\r\n  user: User | null;\r\n  profile: UserProfile | null;\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n  isStudent: boolean;\r\n  isInstructor: boolean;\r\n  isAdmin: boolean;\r\n  refreshProfile: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  session: null,\r\n  user: null,\r\n  profile: null,\r\n  isLoading: true,\r\n  isAuthenticated: false,\r\n  isStudent: false,\r\n  isInstructor: false,\r\n  isAdmin: false,\r\n  refreshProfile: async () => {},\r\n});\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [session, setSession] = useState<Session | null>(null);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [profile, setProfile] = useState<UserProfile | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const refreshProfile = async () => {\r\n    if (user) {\r\n      const profileData = await getUserProfile();\r\n      if (profileData) {\r\n        setProfile(profileData as UserProfile);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Initial session check\r\n    const checkSession = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const { data: { session: currentSession } } = await supabase.auth.getSession();\r\n        setSession(currentSession);\r\n        \r\n        if (currentSession?.user) {\r\n          setUser(currentSession.user);\r\n          const profileData = await getUserProfile();\r\n          if (profileData) {\r\n            setProfile(profileData as UserProfile);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking auth session:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkSession();\r\n\r\n    // Subscribe to auth changes\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\r\n      async (event, newSession) => {\r\n        setSession(newSession);\r\n        setUser(newSession?.user ?? null);\r\n        \r\n        if (newSession?.user) {\r\n          const profileData = await getUserProfile();\r\n          if (profileData) {\r\n            setProfile(profileData as UserProfile);\r\n          }\r\n        } else {\r\n          setProfile(null);\r\n        }\r\n        \r\n        setIsLoading(false);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const isAuthenticated = !!user && !!session;\r\n  const isStudent = profile?.role === UserRole.STUDENT;\r\n  const isInstructor = profile?.role === UserRole.INSTRUCTOR;\r\n  const isAdmin = profile?.role === UserRole.ADMIN;\r\n\r\n  const value = {\r\n    session,\r\n    user,\r\n    profile,\r\n    isLoading,\r\n    isAuthenticated,\r\n    isStudent,\r\n    isInstructor,\r\n    isAdmin,\r\n    refreshProfile,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}